{
 "openapi": "3.0.2",
 "info": {
  "title": "Shim Service",
  "version": "0.1"
 },
 "tags": [
  {
   "name": "session",
   "description": "Calls related to service sessions."
  },
  {
   "name": "presence",
   "description": "Calls related to presence."
  },
  {
   "name": "conversation",
   "description": "Calls related to conversations."
  }
 ],
 "paths": {
  "/presence/actions/set-status": {
   "post": {
    "tags": [
     "presence"
    ],
    "summary": "Set Presence Status",
    "description": "Used to set the presence status for the current user.\n",
    "operationId": "SetPresenceStatus",
    "parameters": [
     {
      "name": "X-1440-Session-Token",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/SetPresenceStatusRequest"
       }
      }
     }
    },
    "responses": {
     "204": {
      "description": "No Content"
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/presence/actions/decline-work": {
   "post": {
    "tags": [
     "presence"
    ],
    "summary": "Decline a Work Item",
    "description": "Used to decline work.\n",
    "operationId": "DeclineWork",
    "parameters": [
     {
      "name": "X-1440-Session-Token",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/DeclineWorkRequest"
       }
      }
     }
    },
    "responses": {
     "204": {
      "description": "No Content"
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/presence/actions/accept-work": {
   "post": {
    "tags": [
     "presence"
    ],
    "summary": "Accept a Work Item",
    "description": "Used to accept work.\n",
    "operationId": "AcceptWork",
    "parameters": [
     {
      "name": "X-1440-Session-Token",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/AcceptWorkRequest"
       }
      }
     }
    },
    "responses": {
     "204": {
      "description": "No Content"
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/presence/actions/close-work": {
   "post": {
    "tags": [
     "presence"
    ],
    "summary": "Close a Work Item",
    "description": "Used to close work.\n",
    "operationId": "CloseWork",
    "parameters": [
     {
      "name": "X-1440-Session-Token",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/CloseWorkRequest"
       }
      }
     }
    },
    "responses": {
     "204": {
      "description": "No Content"
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/work-conversations/{workTargetId}/messages": {
   "post": {
    "tags": [
     "conversation"
    ],
    "summary": "Send Conversation Message",
    "description": "Used to send a message.",
    "operationId": "SendWorkMessage",
    "parameters": [
     {
      "name": "workTargetId",
      "in": "path",
      "description": "Work Target Id",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 18,
       "pattern": "^0Mw[a-zA-Z0-9]{12,15}",
       "example": "0MwHs0000011U8O"
      }
     },
     {
      "name": "X-1440-Session-Token",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/SendWorkMessageRequest"
       }
      }
     }
    },
    "responses": {
     "204": {
      "description": "OK"
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/organizations/{orgId}/sessions/{sessionToken}/actions/keep-alive": {
   "post": {
    "tags": [
     "session"
    ],
    "summary": "Keep Session ALive",
    "description": "Used to ensure the session does not time out.\n",
    "operationId": "KeepSessionAlive",
    "parameters": [
     {
      "name": "orgId",
      "in": "path",
      "description": "Organization Id",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 15,
       "example": "00D6s000000ZeIc"
      }
     },
     {
      "name": "sessionToken",
      "in": "path",
      "description": "Session token.",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 250,
       "example": "SGVsbG8uICBUaGlzIGlzIGEgc2FtcGxlIHNlc3Npb24gdG9rZW4uIE5vdCByZWFsbHkgZ29pbmcgdG8gbG9vayBsaWtlIHRoaXMgdGhvdWdoLg"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "OK"
     },
     "400": {
      "description": "Invalid session token.",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "409": {
      "description": "Conflict",
      "content": {}
     },
     "410": {
      "description": "Session is already gone.",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/organizations/{orgId}/sessions": {
   "put": {
    "tags": [
     "session"
    ],
    "summary": "Start a Session",
    "description": "Used to start a session with the service.  If the user already has an active session it will be updated, otherwise\na new one will be created.\n",
    "operationId": "StartSession",
    "parameters": [
     {
      "name": "orgId",
      "in": "path",
      "description": "Organization Id",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 15,
       "example": "00D6s000000ZeIc"
      }
     },
     {
      "name": "Prefer",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Content-Type",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/StartSessionRequest"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "An existing session for was updated.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/StartSessionResponse"
        }
       }
      }
     },
     "201": {
      "description": "A new session was created",
      "content": {}
     },
     "202": {
      "description": "The request was accepted and a new session is being created, \nusually as a result of setting the Prefer header to response-async. \nExpect a push notification when session creation has completed.\n",
      "content": {}
     },
     "400": {
      "description": "Bad Request",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "409": {
      "description": "Conflict",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  },
  "/organizations/{orgId}/sessions/{sessionToken}": {
   "delete": {
    "tags": [
     "session"
    ],
    "summary": "End a Session",
    "description": "Used to end an existing session with the service.\n",
    "operationId": "EndSession",
    "parameters": [
     {
      "name": "orgId",
      "in": "path",
      "description": "Organization Id",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 15,
       "example": "00D6s000000ZeIc"
      }
     },
     {
      "name": "sessionToken",
      "in": "path",
      "description": "Session token.",
      "required": true,
      "schema": {
       "type": "string",
       "maxLength": 250,
       "example": "SGVsbG8uICBUaGlzIGlzIGEgc2FtcGxlIHNlc3Npb24gdG9rZW4uIE5vdCByZWFsbHkgZ29pbmcgdG8gbG9vayBsaWtlIHRoaXMgdGhvdWdoLg"
      }
     },
     {
      "name": "X-Correlation-ID",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Authorization",
      "in": "header",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "Session ended (removed)."
     },
     "400": {
      "description": "Invalid session id.",
      "content": {}
     },
     "401": {
      "description": "Unauthorized",
      "content": {}
     },
     "403": {
      "description": "Insufficient privileges",
      "content": {}
     },
     "410": {
      "description": "Session is gone.",
      "content": {}
     },
     "500": {
      "description": "500 response"
     },
     "503": {
      "description": "503 response"
     },
     "406": {
      "description": "406 response"
     },
     "415": {
      "description": "415 response"
     }
    },
    "x-amazon-apigateway-integration": {
     "type": "aws_proxy",
     "httpMethod": "POST",
     "uri": "${uri}",
     "passthroughBehavior": "when_no_match",
     "timeoutInMillis": 29000
    }
   }
  }
 },
 "components": {
  "schemas": {
   "MessageAttachment": {
    "type": "object",
    "properties": {
     "key": {
      "type": "string",
      "maxLength": 250
     },
     "value": {
      "type": "string",
      "maxLength": 8192
     }
    }
   },
   "PresenceStatus": {
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0N5[a-zA-Z0-9]{15,18}"
     },
     "label": {
      "type": "string",
      "maxLength": 250
     },
     "statusOption": {
      "type": "string",
      "maxLength": 20,
      "enum": [
       "online",
       "busy",
       "offline"
      ]
     }
    }
   },
   "SetPresenceStatusRequest": {
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0N5[a-zA-Z0-9]{15,18}"
     }
    }
   },
   "DeclineWorkRequest": {
    "type": "object",
    "properties": {
     "workId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0Bz[a-zA-Z0-9]{12,15}"
     },
     "workTargetId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0Mw[a-zA-Z0-9]{12,15}"
     },
     "declineReason": {
      "type": "string",
      "maxLength": 250
     }
    }
   },
   "AcceptWorkRequest": {
    "type": "object",
    "properties": {
     "workId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0Bz[a-zA-Z0-9]{12,15}"
     },
     "workTargetId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0Mw[a-zA-Z0-9]{12,15}"
     }
    }
   },
   "CloseWorkRequest": {
    "type": "object",
    "properties": {
     "workTargetId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^0Mw[a-zA-Z0-9]{12,15}"
     }
    }
   },
   "SendWorkMessageRequest": {
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "maxLength": 250
     },
     "messageBody": {
      "type": "string",
      "maxLength": 16384
     },
     "attachments": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/MessageAttachment"
      }
     }
    }
   },
   "StartSessionRequest": {
    "type": "object",
    "properties": {
     "userId": {
      "type": "string",
      "maxLength": 18,
      "pattern": "^005[a-zA-Z0-9]{15,18}"
     },
     "instanceUrl": {
      "type": "string",
      "maxLength": 512
     },
     "fcmDeviceToken": {
      "type": "string",
      "maxLength": 512
     },
     "accessToken": {
      "type": "string",
      "maxLength": 4096
     },
     "channelPlatformTypes": {
      "type": "array",
      "items": {
       "type": "string",
       "maxLength": 20,
       "enum": [
        "omni",
        "x1440"
       ]
      }
     }
    }
   },
   "StartSessionResponse": {
    "type": "object",
    "properties": {
     "sessionToken": {
      "type": "string",
      "maxLength": 250
     },
     "expirationTime": {
      "type": "integer",
      "format": "int64"
     },
     "presenceStatuses": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/PresenceStatus"
      }
     }
    }
   }
  }
 }
}